<?xml version="1.0"?>
<launch>

  <node name="rplidarNode"          pkg="rplidar_ros"  type="rplidarNode" output="screen">
	<param name="serial_port"         type="string" value="/dev/rplidar"/>
	<param name="serial_baudrate"     type="int"    value="115200"/>
	<param name="frame_id"            type="string" value="laser"/>
	<param name="inverted"            type="bool"   value="false"/>
	<param name="angle_compensate"    type="bool"   value="true"/>
  </node>

  <node pkg="kobuki_keyop" type="keyop" name="keyop" output="screen">
    <remap from="keyop/motor_power" to="mobile_base/commands/motor_power"/>
    <remap from="keyop/cmd_vel" to="mobile_base/commands/velocity"/>
    <param name="linear_vel_step"  value="0.05" type="double"/>
    <param name="linear_vel_max"   value="0.5"  type="double"/>
    <param name="angular_vel_step" value="0.33" type="double"/>
    <param name="angular_vel_max"  value="1.0"  type="double"/>
    <param name="wait_for_connection_" value="true" type="bool"/>
  </node>

  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find kobuki_description)/urdf/kobuki_standalone.urdf.xacro'" />
  <param name="robot_description" command="$(arg urdf_file)" />

  <node pkg="nodelet" type="nodelet" name="mobile_base_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="mobile_base" args="load kobuki_node/KobukiNodelet mobile_base_nodelet_manager">
    <rosparam file="$(find kobuki_node)/param/base.yaml" command="load"/>
    <remap from="mobile_base/odom" to="odom"/>
    <!-- Don't do this - force applications to use a velocity mux for redirection
      <remap from="mobile_base/commands/velocity" to="cmd_vel"/>
   -->
    <remap from="mobile_base/enable" to="enable"/>
    <remap from="mobile_base/disable" to="disable"/>
    <remap from="mobile_base/joint_states" to="joint_states"/>
  </node>

  <node pkg="diagnostic_aggregator" type="aggregator_node" name="diagnostic_aggregator" >
    <rosparam command="load" file="$(find kobuki_node)/param/diagnostics.yaml" />
  </node>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

	<!-- for navigation -->
  <node pkg="tf" type="static_transform_publisher" name="laser_tf_broadcaster" args="0.0 0.0 0.0 -3.14 0 0 base_link laser 100" />


  <!--node pkg="tf" type="static_transform_publisher" name="laser_tf_broadcaster" args="0.0 0.0 0.0 0 0 0 base_link laser 100" /-->


  <!--node pkg="tf" type="static_transform_publisher" name="laser_tf_broadcaster" args="0.0 0.0 0.0 0 0 0 base_link laser 100" /-->


  <node pkg="tf" type="static_transform_publisher" name="footprint_tf_broadcaster" args="0.0 0.0 0.1 0 0 0 base_footprint base_link 100" />


</launch>
